{"version":3,"sources":["components/Card.js","components/TextField.js","components/Notification.js","components/LinearProgress.js","views/Home.js","App.js","index.js"],"names":["useStyles","makeStyles","root","flexGrow","marginTop","card","margin","maxWidth","bullet","display","transform","title","fontSize","pos","marginBottom","CardSheet","props","classes","className","Card","CardContent","children","theme","container","flexWrap","textField","width","marginLeft","spacing","marginRight","dense","menu","FilledTextFields","TextField","variant","variantIcon","success","CheckCircleIcon","warning","WarningIcon","error","ErrorIcon","info","InfoIcon","useStyles1","backgroundColor","green","palette","dark","primary","main","amber","icon","iconVariant","opacity","message","alignItems","MySnackbarContentWrapper","onClose","other","Icon","SnackbarContent","clsx","aria-describedby","id","action","IconButton","key","aria-label","color","onClick","Notification","open","handleClose","type","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","position","top","right","left","LinearDeterminate","React","useState","completed","setCompleted","useEffect","timer","setInterval","oldCompleted","diff","Math","random","min","clearInterval","LinearProgress","value","paddingBottom","Home","initialData","sku","description","unitOfMeasure","loading","setLoading","products","setProducts","status","snackbar","setSnackbar","inputSku","name","email","phone","deliverToName","deliverTo","deliverToStreet","deliverToCity","deliverToState","deliverToPostalCode","deliverToCountry","deliverToEmail","nameBill","deliverToBill","streetBill","cityBill","stateBill","postalCodeBill","countryBill","carrierCode","carrierName","carrierId","carrierPhone","carrierContactName","carrierContactEmail","values","setValues","handleClick","event","a","preventDefault","outputData","reduce","acc","next","push","totalAmount","price","parseInt","quantity","toFixed","fetch","method","body","JSON","stringify","handleChange","target","console","log","Grid","item","xs","sm","Typography","gutterBottom","label","onChange","disabled","Divider","Button","prevState","handleAddProduct","map","data","index","md","options","productsData","product","newState","handleChangeProduct","e","handleChangeQuantity","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.27e5c429.chunk.js","sourcesContent":["import React from 'react'\nimport {makeStyles} from '@material-ui/core/styles'\nimport {Card, CardContent} from '@material-ui/core'\n\nconst useStyles = makeStyles({\n  root: {\n    flexGrow: 1,\n    marginTop: 60\n  },\n  card: {\n    margin: 'auto',\n    maxWidth: 700\n  },\n  bullet: {\n    display: 'inline-block',\n    margin: '0 2px',\n    transform: 'scale(0.8)'\n  },\n  title: {\n    fontSize: 14\n  },\n  pos: {\n    marginBottom: 12\n  }\n})\n\nexport default function CardSheet(props) {\n  const classes = useStyles()\n  return (\n    <div className={classes.root}>\n      <Card className={classes.card}>\n        <CardContent>{props.children}</CardContent>\n      </Card>\n    </div>\n  )\n}\n","import React from 'react'\nimport {makeStyles} from '@material-ui/core/styles'\nimport TextField from '@material-ui/core/TextField'\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap'\n  },\n  textField: {\n    width: 650,\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1)\n  },\n  dense: {\n    marginTop: theme.spacing(2)\n  },\n  menu: {\n    width: 200\n  }\n}))\n\nexport default function FilledTextFields(props) {\n  const classes = useStyles()\n\n  return <TextField className={classes.textField} margin=\"normal\" variant=\"filled\" {...props} />\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport clsx from 'clsx'\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle'\nimport ErrorIcon from '@material-ui/icons/Error'\nimport InfoIcon from '@material-ui/icons/Info'\nimport CloseIcon from '@material-ui/icons/Close'\nimport {amber, green} from '@material-ui/core/colors'\nimport IconButton from '@material-ui/core/IconButton'\nimport Snackbar from '@material-ui/core/Snackbar'\nimport SnackbarContent from '@material-ui/core/SnackbarContent'\nimport WarningIcon from '@material-ui/icons/Warning'\nimport {makeStyles} from '@material-ui/core/styles'\n\nconst variantIcon = {\n  success: CheckCircleIcon,\n  warning: WarningIcon,\n  error: ErrorIcon,\n  info: InfoIcon\n}\n\nconst useStyles1 = makeStyles(theme => ({\n  success: {\n    backgroundColor: green[600]\n  },\n  error: {\n    backgroundColor: theme.palette.error.dark\n  },\n  info: {\n    backgroundColor: theme.palette.primary.main\n  },\n  warning: {\n    backgroundColor: amber[700]\n  },\n  icon: {\n    fontSize: 20\n  },\n  iconVariant: {\n    opacity: 0.9,\n    marginRight: theme.spacing(1)\n  },\n  message: {\n    display: 'flex',\n    alignItems: 'center'\n  }\n}))\n\nfunction MySnackbarContentWrapper(props) {\n  const classes = useStyles1()\n  const {className, message, onClose, variant, ...other} = props\n  const Icon = variantIcon[variant]\n\n  return (\n    <SnackbarContent\n      className={clsx(classes[variant], className)}\n      aria-describedby=\"client-snackbar\"\n      variant={variant}\n      message={\n        <span id=\"client-snackbar\" className={classes.message}>\n          <Icon className={clsx(classes.icon, classes.iconVariant)} />\n          {message}\n        </span>\n      }\n      action={[\n        <IconButton key=\"close\" aria-label=\"close\" color=\"inherit\" onClick={onClose}>\n          <CloseIcon className={classes.icon} />\n        </IconButton>\n      ]}\n      {...other}\n    />\n  )\n}\n\nMySnackbarContentWrapper.propTypes = {\n  className: PropTypes.string,\n  message: PropTypes.string,\n  onClose: PropTypes.func,\n  variant: PropTypes.oneOf(['error', 'info', 'success', 'warning']).isRequired\n}\n\nfunction Notification({open, handleClose, message, type}) {\n  return (\n    <div>\n      <Snackbar\n        anchorOrigin={{\n          vertical: 'top',\n          horizontal: 'center'\n        }}\n        open={open}\n        autoHideDuration={6000}\n        onClose={handleClose}\n      >\n        <MySnackbarContentWrapper onClose={handleClose} variant={type} message={message} />\n      </Snackbar>\n    </div>\n  )\n}\n\nexport default Notification\n","import React from 'react'\nimport {makeStyles} from '@material-ui/core/styles'\nimport LinearProgress from '@material-ui/core/LinearProgress'\n\nconst useStyles = makeStyles({\n  root: {\n    flexGrow: 1,\n    position: 'fixed',\n    top: 0,\n    right: 0,\n    left: 0\n  }\n})\n\nexport default function LinearDeterminate() {\n  const classes = useStyles()\n  const [completed, setCompleted] = React.useState(0)\n\n  React.useEffect(() => {\n    function progress() {\n      setCompleted(oldCompleted => {\n        if (oldCompleted === 100) {\n          return 0\n        }\n        const diff = Math.random() * 10\n        return Math.min(oldCompleted + diff, 100)\n      })\n    }\n\n    const timer = setInterval(progress, 500)\n    return () => {\n      clearInterval(timer)\n    }\n  }, [])\n\n  return (\n    <div className={classes.root}>\n      <LinearProgress variant=\"determinate\" value={completed} />\n    </div>\n  )\n}\n","import React, {useState} from 'react'\nimport {makeStyles} from '@material-ui/core/styles'\nimport {Grid, Divider, Typography, Button} from '@material-ui/core'\nimport Select from 'react-select'\n\nimport productsData from '../data/products.json'\nimport {Card, TextField, Notification, LinearProgress} from '../components'\n\nconst useStyles = makeStyles({\n  root: {\n    paddingBottom: 300,\n    '&:last-child': {\n      paddingBottom: 300\n    }\n  }\n})\n\nfunction Home() {\n  const classes = useStyles()\n  const initialData = [{sku: '', description: '', unitOfMeasure: ''}]\n  const [loading, setLoading] = useState(false)\n  const [products, setProducts] = useState(initialData)\n  const [snackbar, setSnackbar] = useState({status: false})\n  const [values, setValues] = useState({\n    inputSku: '',\n    name: '',\n    email: '',\n    phone: '',\n    deliverToName: '',\n    deliverTo: '',\n    deliverToStreet: '',\n    deliverToCity: '',\n    deliverToState: '',\n    deliverToPostalCode: '',\n    deliverToCountry: '',\n    deliverToEmail: '',\n    nameBill: 'Sodimac S.A',\n    deliverToBill: 'PAGOS SODIMAC pagos@sodimac.cl',\n    streetBill: 'Pdte Eduardo Frei Montalva 3092',\n    cityBill: 'Santiago',\n    stateBill: 'CL',\n    postalCodeBill: '8640195',\n    countryBill: 'Chile',\n    carrierCode: 'FEDE',\n    carrierName: 'FEDEX EXPRESS CHILE SPA.',\n    carrierId: '76754296-8',\n    carrierPhone: '',\n    carrierContactName: 'Esteban Miranda',\n    carrierContactEmail: 'esmiranda@falabella.cl'\n  })\n\n  const handleClick = async event => {\n    event.preventDefault()\n    setLoading(true)\n    const outputData = {\n      values,\n      products: products.reduce((acc, next) => {\n        acc.push({\n          ...next,\n          totalAmount: (next.price * parseInt(next.quantity)).toFixed(1) //here Math.round()\n        })\n        return acc\n      }, [])\n    }\n\n    await fetch('https://fn-sodimac-uploadsftp.azurewebsites.net/api/ParseHandler', {\n      method: 'POST',\n      body: JSON.stringify(outputData)\n    })\n    setLoading(false)\n    setSnackbar({status: true, message: 'Archivo cargado', type: 'success'})\n  }\n\n  const handleChange = event => {\n    const name = event.target.name\n    const value = event.target.value\n    setValues({...values, [name]: value})\n  }\n\n  const handleAddProduct = event => {\n    event.preventDefault()\n    setProducts(prevState => [...prevState, ...initialData])\n  }\n\n  const handleChangeProduct = (product, index) => {\n    setProducts(prevState => {\n      const newState = [...prevState]\n      newState[index] = {\n        ...newState[index],\n        ...product\n      }\n      return newState\n    })\n  }\n\n  const handleChangeQuantity = (event, index) => {\n    const name = event.target.name\n    const value = event.target.value\n    setProducts(prevState => {\n      const newState = [...prevState]\n      newState[index] = {\n        ...newState[index],\n        [name]: value\n      }\n      return newState\n    })\n  }\n\n  const handleCloseSnackbar = () => {\n    setSnackbar({...snackbar, status: false})\n  }\n\n  const mapInputs = () => {\n    return products.map((data, index) => {\n      return (\n        <Grid key={index} container spacing={3}>\n          <Grid item md={6}>\n            <div className=\"mt-3\">\n              <Select\n                options={productsData}\n                onChange={product => handleChangeProduct(product, index)}\n                name={values.inputSku}\n              />\n            </div>\n          </Grid>\n          <Grid item md={6}>\n            <TextField\n              id=\"quantity\"\n              name=\"quantity\"\n              className=\"input-width\"\n              label=\"Cantidad\"\n              onChange={e => handleChangeQuantity(e, index)}\n            />\n          </Grid>\n        </Grid>\n      )\n    })\n  }\n\n  console.log(loading)\n  return (\n    <>\n      {loading && <LinearProgress />}\n      <Grid container item xs={12} sm>\n        <Card className={classes.root}>\n          <div className=\"text-center\">\n            <Typography gutterBottom variant=\"h4\">\n              Generador XML\n            </Typography>\n          </div>\n          <form className=\"mt-3\">\n            <Typography variant=\"subtitle2\">Datos:</Typography>\n            <TextField id=\"name\" label=\"Nombre\" name=\"name\" onChange={handleChange} />\n            <TextField\n              id=\"email\"\n              label=\"Email\"\n              name=\"email\"\n              onChange={handleChange}\n              disabled={true}\n            />\n            <TextField\n              id=\"phone\"\n              label=\"Teléfono\"\n              name=\"phone\"\n              onChange={handleChange}\n              disabled={true}\n            />\n            <div className=\"mt-3\">\n              <Divider variant=\"middle\" />\n            </div>\n            <Typography variant=\"subtitle2\">Enviar a:</Typography>\n            <TextField\n              id=\"name\"\n              name=\"deliverToName\"\n              label=\"Nombre\"\n              onChange={handleChange}\n              value={values.deliverToName}\n            />\n            <TextField\n              id=\"deliverTo\"\n              name=\"deliverTo\"\n              label=\"Entregar a\"\n              onChange={handleChange}\n              value={values.deliverTo}\n            />\n            <TextField\n              id=\"street\"\n              name=\"deliverToStreet\"\n              label=\"Dirección\"\n              onChange={handleChange}\n              value={values.deliverToStreet}\n            />\n            <TextField\n              id=\"city\"\n              name=\"deliverToCity\"\n              label=\"Ciudad\"\n              onChange={handleChange}\n              value={values.deliverToCity}\n            />\n            <TextField\n              id=\"state\"\n              name=\"deliverToState\"\n              label=\"Estado\"\n              onChange={handleChange}\n              value={values.deliverToState}\n            />\n            <TextField\n              id=\"postalCode\"\n              name=\"deliverToPostalCode\"\n              label=\"Código Postal\"\n              onChange={handleChange}\n              value={values.deliverToPostalCode}\n            />\n            <TextField\n              id=\"country\"\n              name=\"deliverToCountry\"\n              label=\"País\"\n              onChange={handleChange}\n              value={values.deliverToCountry}\n            />\n            <TextField\n              id=\"email\"\n              name=\"deliverToEmail\"\n              label=\"Email\"\n              onChange={handleChange}\n              value={values.deliverToEmail}\n            />\n            <div className=\"mt-3\">\n              <Divider variant=\"middle\" />\n            </div>\n            <Typography variant=\"subtitle2\">Cobrar a:</Typography>\n            <TextField\n              id=\"nameBill\"\n              name=\"nameBill\"\n              label=\"Nombre\"\n              onChange={handleChange}\n              value={values.nameBill}\n              disabled={true}\n            />\n            <TextField\n              id=\"deliverToBill\"\n              name=\"deliverToBill\"\n              label=\"Entregado por\"\n              onChange={handleChange}\n              value={values.deliverToBill}\n              disabled={true}\n            />\n            <TextField\n              id=\"streetBill\"\n              name=\"streetBill\"\n              label=\"Dirección\"\n              onChange={handleChange}\n              value={values.streetBill}\n              disabled={true}\n            />\n            <TextField\n              id=\"cityBill\"\n              name=\"cityBill\"\n              label=\"Ciudad\"\n              onChange={handleChange}\n              value={values.cityBill}\n              disabled={true}\n            />\n            <TextField\n              id=\"stateBill\"\n              name=\"stateBill\"\n              label=\"Estado\"\n              onChange={handleChange}\n              value={values.stateBill}\n              disabled={true}\n            />\n            <TextField\n              id=\"postalCodeBill\"\n              name=\"postalCodeBill\"\n              label=\"Código Postal\"\n              onChange={handleChange}\n              value={values.postalCodeBill}\n              disabled={true}\n            />\n            <TextField\n              id=\"countryBill\"\n              name=\"countryBill\"\n              label=\"País\"\n              onChange={handleChange}\n              value={values.countryBill}\n              disabled={true}\n            />\n            <div className=\"mt-3\">\n              <Divider variant=\"middle\" />\n            </div>\n            <Typography variant=\"subtitle2\">Carrier:</Typography>\n            <TextField\n              id=\"carrierCode\"\n              name=\"carrierCode\"\n              label=\"Código de carrier\"\n              onChange={handleChange}\n              value={values.carrierCode}\n              disabled={true}\n            />\n            <TextField\n              id=\"carrierName\"\n              name=\"carrierName\"\n              label=\"Nombre de carrier\"\n              onChange={handleChange}\n              value={values.carrierName}\n              disabled={true}\n            />\n            <TextField\n              id=\"carrierId\"\n              name=\"carrierId\"\n              label=\"Id carrier\"\n              onChange={handleChange}\n              value={values.carrierId}\n              disabled={true}\n            />\n            <TextField\n              id=\"carrierPhone\"\n              name=\"carrierPhone\"\n              label=\"Teléfono carrier\"\n              onChange={handleChange}\n              value={values.carrierPhone}\n              disabled={true}\n            />\n            <TextField\n              id=\"carrierContactName\"\n              name=\"carrierContactName\"\n              label=\"Nombre de contacto\"\n              onChange={handleChange}\n              value={values.carrierContactName}\n              disabled={true}\n            />\n            <TextField\n              id=\"carrierContactEmail\"\n              name=\"carrierContactEmail\"\n              label=\"Email de contacto\"\n              onChange={handleChange}\n              value={values.carrierContactEmail}\n              disabled={true}\n            />\n            <div className=\"mt-3\">\n              <Divider variant=\"middle\" />\n            </div>\n            <Typography variant=\"subtitle2\">Productos:</Typography>\n            <Button variant=\"contained\" color=\"primary\" onClick={event => handleAddProduct(event)}>\n              Agregar Producto\n            </Button>\n            {mapInputs(products)}\n            <Button\n              type=\"submit\"\n              variant=\"contained\"\n              color=\"primary\"\n              disabled={loading}\n              onClick={event => handleClick(event)}\n            >\n              {loading ? 'Subiendo archivo' : ' Generar XML'}\n            </Button>\n          </form>\n        </Card>\n      </Grid>\n      <Notification\n        open={snackbar.status}\n        handleClose={handleCloseSnackbar}\n        message={snackbar.message}\n        type={snackbar.type}\n      />\n    </>\n  )\n}\nexport default Home\n","import React from 'react'\n\nimport {Home} from './views'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Home />\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}